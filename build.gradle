import compiler.NativeImage

plugins {
  id 'compiler.native-image'
  id 'com.github.johnrengelman.shadow' version '8.1.0'
  id 'com.palantir.git-version' version '1.0.0'
}

apply plugin: 'scala'
apply plugin: 'application'

repositories {
    mavenCentral()
    maven {
        url 'https://mvnrepository.com/artifact'
    }
}

ext {
    scala_maj = '2.13'
    scala_ver = "${scala_maj}.11"
}

dependencies {
    implementation group: 'org.scala-lang' , name: 'scala-library'  , version: scala_ver
    implementation group: 'org.scala-lang' , name: 'scala-compiler' , version: scala_ver
    implementation group: 'org.scala-lang' , name: 'scala-reflect'  , version: scala_ver

    implementation group: 'org.scala-lang.modules', name: "scala-async_${scala_maj}", version: '1.0.1'
    implementation group: 'org.scala-lang.modules', name: "scala-xml_${scala_maj}", version: '2.1.0'

    implementation group: 'org.scalaz', name: "scalaz-core_${scala_maj}", version: '7.3.7'

    testImplementation group: 'org.scalatest', name: "scalatest_${scala_maj}", version: '3.2.9'
    testImplementation group: 'org.scalactic', name: "scalactic_${scala_maj}", version: '3.2.9'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.scalatestplus', name: "junit-4-13_${scala_maj}", version: '3.2.9.0'
}

version gitVersion()

application {
    mainClass.set('app.Scant')
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
                exclude '**/*.sample'
        }
    }
}

task repl(type:JavaExec) {
    mainClass = 'scala.tools.nsc.MainGenericRunner'
    classpath = sourceSets.main.runtimeClasspath
    standardInput System.in
    args '-usejavacp'
}

shadowJar {
    archiveClassifier = ''
    manifest {
        attributes 'App-Version': gitVersion()
    }
}

nativeImage {
    dependsOn shadowJar

    minHeap 1
    maxHeap 3
    maxNew 3

    parameters = [
      NativeImage.Option.STATIC
    , NativeImage.Option.MUSL
    , NativeImage.Option.LINK_BUILD
    , NativeImage.Option.CPU
    ]
}

compileScala {
    scalaCompileOptions.additionalParameters = [
        '-feature'
      , '-deprecation'
      , '-unchecked'
      , '-Xlint'
      , '-Xfatal-warnings'
      , '-Xasync'
      , '-Xsource:3'
      , '-release'
      , '17'
    ]
}
