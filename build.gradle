plugins {
  id 'com.github.johnrengelman.shadow' version '7.0.0'
}

apply plugin: 'scala'
apply plugin: 'application'

repositories {
    mavenCentral()
    maven {
        url 'https://mvnrepository.com/artifact'
    }
}

dependencies {
    implementation group: 'org.scala-lang' , name: 'scala-library'  , version: '2.13.6'
    implementation group: 'org.scala-lang' , name: 'scala-compiler' , version: '2.13.6'
    implementation group: 'org.scala-lang' , name: 'scala-reflect' , version: '2.13.6'

    implementation group: 'org.scala-lang.modules', name: 'scala-async_2.13', version: '1.0.0-M1'
    implementation group: 'org.scala-lang.modules', name: 'scala-xml_2.13', version: '2.0.0'

    testImplementation group: 'org.scalatest', name: 'scalatest_2.13', version: '3.2.9'
    testImplementation group: 'org.scalactic', name: 'scalactic_2.13', version: '3.2.9'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.scalatestplus', name: 'junit-4-13_2.13', version: '3.2.9.0'
}

version = '1.7.7'

application {
    mainClass = 'app.Scant'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
                exclude '**/*.sample'
        }
    }
}

task repl(type:JavaExec) {
    mainClass = "scala.tools.nsc.MainGenericRunner"
    classpath = sourceSets.main.runtimeClasspath
    standardInput System.in
    args '-usejavacp'
}

shadowJar {
    classifier = ''
}

compileScala { // or: tasks.withType(ScalaCompile)
    scalaCompileOptions.additionalParameters = ["-feature","-deprecation","-unchecked","-Xlint","-Xfatal-warnings","-Xasync","-Xsource:3"]
}
